/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Ciencias.GUI;
import Ciencias.Core.Question;
import Ciencias.Managers.GoogleDriveManager;
import Ciencias.Managers.QArray;
import Ciencias.Managers.TestEditorManager;
import Ciencias.Managers.UserAnswerManager;
import Ciencias.Managers.WordBankMan;
import Ciencias.Parsers.CTMTParser;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.*;
import static java.lang.Boolean.FALSE;
import static java.lang.Boolean.TRUE;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import Ciencias.Managers.NumberVerifier;
import java.awt.event.ItemEvent;

/**
 * The main GUI window
 * @author Paul Alves
 * @version 3/16/2014
 */
public class MainWindow extends javax.swing.JFrame {
public final String LINESEP = System.getProperty("line.separator");
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        debugConText.setText("#CIENCIAS TEST MANAGER DEBUG LOG#" + LINESEP + "Ready");
        uploadFile.setEnabled(FALSE);
    }
private int currentIndex=0;
private int finalize=0;
private File file;
private File sFile;
private String frText;
private DefaultListModel qListM = new DefaultListModel();
private DefaultListModel ansListM = new DefaultListModel();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        advMenu = new javax.swing.JPopupMenu();
        uploadFile = new javax.swing.JMenuItem();
        debugMode = new javax.swing.JMenuItem();
        testWindow = new javax.swing.JFrame();
        nextQuestion = new javax.swing.JButton();
        previousQuestion = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        questionNum = new javax.swing.JLabel();
        subResponse = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        questionText = new javax.swing.JLabel();
        advTestButton = new javax.swing.JButton();
        aboutWindow = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        openATest = new javax.swing.JFileChooser();
        errorBox = new javax.swing.JDialog();
        errorClose = new java.awt.Button();
        errorTextold = new javax.swing.JLabel();
        img = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        errorText = new javax.swing.JTextPane();
        freeResp = new javax.swing.JFrame();
        freeText = new java.awt.TextArea();
        freeSubmit = new java.awt.Button();
        jLabel3 = new javax.swing.JLabel();
        debugCon = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        debugConText = new javax.swing.JTextArea();
        debugConText.append("test\n");
        exportDebug = new java.awt.Button();
        finalizeTest = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        periodField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        uploadAnswers = new java.awt.Button();
        saveAnswers = new java.awt.Button();
        jSeparator2 = new javax.swing.JSeparator();
        reviewQuestions = new java.awt.Button();
        drivePrompt = new javax.swing.JFrame();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        googleLink = new javax.swing.JLabel();
        googleAuth = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        googleAuthSubmit = new java.awt.Button();
        saveCTMA = new javax.swing.JFileChooser();
        closePrompt = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        closeGo = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        qJump = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        relative = new javax.swing.JRadioButton();
        direct = new javax.swing.JRadioButton();
        strict = new javax.swing.JRadioButton();
        jumpText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jumpWhat = new javax.swing.JButton();
        jump = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jumpHelpD = new javax.swing.JDialog();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        advTestMenu = new javax.swing.JPopupMenu();
        skipQuestion = new javax.swing.JMenuItem();
        jumpTo = new javax.swing.JMenuItem();
        answerReview = new javax.swing.JFrame();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        finalizeTestReal = new javax.swing.JButton();
        changeAnswer = new javax.swing.JButton();
        missingAnswers = new javax.swing.JFrame();
        jScrollPane7 = new javax.swing.JScrollPane();
        listUnanswered = new javax.swing.JList();
        answerQ = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        debugExporter = new javax.swing.JFileChooser();
        testEdit = new javax.swing.JFrame();
        finishTestEdit = new javax.swing.JButton();
        loadCTMT = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        headerEdit = new javax.swing.JButton();
        testEditHelp = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        qList = new javax.swing.JList();
        editQ = new javax.swing.JButton();
        newQ = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        headList = new javax.swing.JList();
        delQ = new javax.swing.JButton();
        up = new javax.swing.JButton();
        down = new javax.swing.JButton();
        clearTest = new javax.swing.JButton();
        editHead = new javax.swing.JDialog();
        jLabel17 = new javax.swing.JLabel();
        random = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        appendPeriod = new javax.swing.JComboBox();
        userNames = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        testName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        driveSubFolder = new javax.swing.JTextField();
        driveFolderRoot = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        wordBank = new javax.swing.JTextField();
        saveHead = new javax.swing.JButton();
        questionEdit = new javax.swing.JDialog();
        jLabel24 = new javax.swing.JLabel();
        qTypeBox = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        qTextEdit = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        qTagEdit = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        qMaxAnswersEdit = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        qImgEdit = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        answerList = new javax.swing.JList();
        addQuestionOK = new javax.swing.JButton();
        addAnswer = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        delAnswer = new javax.swing.JButton();
        addAnswerDialog = new javax.swing.JDialog();
        answerTF = new javax.swing.JTextField();
        okAddAnswer = new javax.swing.JButton();
        cancelAddAnswer = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        saveTestFC = new javax.swing.JFileChooser();
        answerKeyPrompt = new javax.swing.JDialog();
        answerkeyOK = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        reallyClear = new javax.swing.JDialog();
        jLabel32 = new javax.swing.JLabel();
        clearYes = new javax.swing.JButton();
        clearNo = new javax.swing.JButton();
        closeTestEditor = new javax.swing.JDialog();
        jLabel33 = new javax.swing.JLabel();
        exitTEYes = new javax.swing.JButton();
        exitTENo = new javax.swing.JButton();
        takeATest = new javax.swing.JButton();
        createATest = new javax.swing.JButton();
        loadResults = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        advancedMenu = new java.awt.Button();

        uploadFile.setText("Upload File");
        uploadFile.setEnabled(false);
        uploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadFileActionPerformed(evt);
            }
        });
        advMenu.add(uploadFile);

        debugMode.setText("Debug Console");
        debugMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debugModeActionPerformed(evt);
            }
        });
        advMenu.add(debugMode);

        testWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        testWindow.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                testWindowWindowClosing(evt);
            }
        });

        nextQuestion.setText("Next ->");
        nextQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextQuestionActionPerformed(evt);
            }
        });

        previousQuestion.setText("<- Previous");
        previousQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousQuestionActionPerformed(evt);
            }
        });

        jList1.setModel(jList1.getModel());
        jScrollPane2.setViewportView(jList1);

        questionNum.setText("Question #");

        subResponse.setText("Write Response");
        subResponse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subResponseActionPerformed(evt);
            }
        });

        jScrollPane6.setBorder(null);
        jScrollPane6.setPreferredSize(new java.awt.Dimension(300, 300));

        questionText.setText("Question Text");
        questionText.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jScrollPane6.setViewportView(questionText);

        advTestButton.setText("Advanced ->");
        advTestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advTestButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout testWindowLayout = new javax.swing.GroupLayout(testWindow.getContentPane());
        testWindow.getContentPane().setLayout(testWindowLayout);
        testWindowLayout.setHorizontalGroup(
            testWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testWindowLayout.createSequentialGroup()
                .addGroup(testWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testWindowLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 110, Short.MAX_VALUE))
                    .addGroup(testWindowLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(testWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(questionNum)
                            .addComponent(advTestButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(testWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(testWindowLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(previousQuestion)
                                .addGap(18, 18, 18)
                                .addComponent(nextQuestion))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testWindowLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(subResponse)
                .addGap(263, 263, 263))
        );
        testWindowLayout.setVerticalGroup(
            testWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testWindowLayout.createSequentialGroup()
                .addGroup(testWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testWindowLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(testWindowLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(questionNum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subResponse)
                .addGap(62, 62, 62)
                .addGroup(testWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousQuestion)
                    .addComponent(nextQuestion)
                    .addComponent(advTestButton))
                .addContainerGap())
        );

        aboutWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        aboutWindow.setTitle("Ciencias Test Manager - About");
        aboutWindow.setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("CIENCIAS TEST MANAGER");

        jLabel2.setText("(c) 2014 Paul Alves");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("This software is available free for all uses.\n\nThe source is available under a hybrid Sleepycat / Zope / BSD License (see license.txt for more info)\n\nFor source / updates, please visit my GitHub page @ https://github.com/gummywormz\n\nThis software makes use of the Google Drive API, located here: https://developers.google.com/drive/\n\nThis software makes use of the Tango Icon Library, located here: http://tango.freedesktop.org/Tango_Icon_Library");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout aboutWindowLayout = new javax.swing.GroupLayout(aboutWindow.getContentPane());
        aboutWindow.getContentPane().setLayout(aboutWindowLayout);
        aboutWindowLayout.setHorizontalGroup(
            aboutWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutWindowLayout.createSequentialGroup()
                .addGroup(aboutWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutWindowLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(aboutWindowLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(aboutWindowLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jLabel1)
                .addContainerGap(178, Short.MAX_VALUE))
        );
        aboutWindowLayout.setVerticalGroup(
            aboutWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addContainerGap())
        );

        openATest.setApproveButtonText("Open");
        openATest.setDialogTitle("Ciencias Test Manager - Choose A Test");
        openATest.setFileFilter(new FileNameExtensionFilter("Test Files", "ctmt"));

        errorBox.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        errorBox.setTitle("Ciencias Test Manager - Error");
        errorBox.setAlwaysOnTop(true);
        errorBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        errorBox.setIconImage(null);

        errorClose.setLabel("OK");
        errorClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorCloseActionPerformed(evt);
            }
        });

        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/process-stop.png"))); // NOI18N

        errorText.setEditable(false);
        errorText.setBackground(new java.awt.Color(214, 217, 223));
        errorText.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        errorText.setContentType("text/HTML"); // NOI18N
        jScrollPane5.setViewportView(errorText);

        javax.swing.GroupLayout errorBoxLayout = new javax.swing.GroupLayout(errorBox.getContentPane());
        errorBox.getContentPane().setLayout(errorBoxLayout);
        errorBoxLayout.setHorizontalGroup(
            errorBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(errorBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(errorBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(errorBoxLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(errorClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(errorBoxLayout.createSequentialGroup()
                        .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(errorTextold)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        errorBoxLayout.setVerticalGroup(
            errorBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorBoxLayout.createSequentialGroup()
                .addGroup(errorBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(errorBoxLayout.createSequentialGroup()
                        .addGroup(errorBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(errorBoxLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(errorBoxLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(errorBoxLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(errorTextold)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        freeResp.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        freeResp.setTitle("Ciencias - Enter a Response");
        freeResp.setAlwaysOnTop(true);
        freeResp.setResizable(false);

        freeSubmit.setLabel("Submit");
        freeSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freeSubmitActionPerformed(evt);
            }
        });

        jLabel3.setText("Enter a response below and click submit");

        javax.swing.GroupLayout freeRespLayout = new javax.swing.GroupLayout(freeResp.getContentPane());
        freeResp.getContentPane().setLayout(freeRespLayout);
        freeRespLayout.setHorizontalGroup(
            freeRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(freeRespLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(freeRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(freeRespLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(freeText, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(freeSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(freeRespLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        freeRespLayout.setVerticalGroup(
            freeRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, freeRespLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(freeRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(freeRespLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(freeSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(freeText, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE))
                .addContainerGap())
        );

        debugCon.setTitle("Ciencias Test Manager - Debug Log");
        debugCon.setResizable(false);

        debugConText.setEditable(false);
        debugConText.setColumns(20);
        debugConText.setRows(5);
        debugConText.setText("#CIENCIAS TEST MANAGER DEBUG LOG#\nReady");
        jScrollPane3.setViewportView(debugConText);

        exportDebug.setLabel("Export");
        exportDebug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportDebugActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout debugConLayout = new javax.swing.GroupLayout(debugCon.getContentPane());
        debugCon.getContentPane().setLayout(debugConLayout);
        debugConLayout.setHorizontalGroup(
            debugConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debugConLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exportDebug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        debugConLayout.setVerticalGroup(
            debugConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debugConLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(debugConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(debugConLayout.createSequentialGroup()
                        .addComponent(exportDebug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
                .addContainerGap())
        );

        finalizeTest.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        finalizeTest.setTitle("Ciencias Test Manager - Finalize Test");
        finalizeTest.setResizable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Finalize Your Test");

        userNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("User Name:");

        jLabel6.setText("Period:");

        uploadAnswers.setLabel("Upload To Google Drive");
        uploadAnswers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadAnswersActionPerformed(evt);
            }
        });

        saveAnswers.setLabel("Save Answers Locally");
        saveAnswers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAnswersActionPerformed(evt);
            }
        });

        reviewQuestions.setLabel("Review Answers");
        reviewQuestions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewQuestionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout finalizeTestLayout = new javax.swing.GroupLayout(finalizeTest.getContentPane());
        finalizeTest.getContentPane().setLayout(finalizeTestLayout);
        finalizeTestLayout.setHorizontalGroup(
            finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalizeTestLayout.createSequentialGroup()
                .addGroup(finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(finalizeTestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, finalizeTestLayout.createSequentialGroup()
                                .addComponent(reviewQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(uploadAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(finalizeTestLayout.createSequentialGroup()
                        .addGroup(finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(finalizeTestLayout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addComponent(jLabel4))
                            .addGroup(finalizeTestLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(periodField)
                                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        finalizeTestLayout.setVerticalGroup(
            finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalizeTestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(periodField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(finalizeTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uploadAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reviewQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        drivePrompt.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        drivePrompt.setTitle("Ciencias Test Manager - Google Drive Authorization");
        drivePrompt.setResizable(false);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("1. Click on the link below.\n2. Sign in to your Google Account.\n3. Paste the code on the page into the box below.\n");
        jScrollPane4.setViewportView(jTextArea2);

        googleLink.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        googleLink.setForeground(new java.awt.Color(0, 0, 255));
        googleLink.setText("<HTML><U>Click here to get your code!</U>");
        googleLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        googleLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                googleLinkMouseClicked(evt);
            }
        });

        jLabel7.setText("Enter The Code Here:");

        googleAuthSubmit.setLabel("Submit");
        googleAuthSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                googleAuthSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout drivePromptLayout = new javax.swing.GroupLayout(drivePrompt.getContentPane());
        drivePrompt.getContentPane().setLayout(drivePromptLayout);
        drivePromptLayout.setHorizontalGroup(
            drivePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drivePromptLayout.createSequentialGroup()
                .addGroup(drivePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drivePromptLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4))
                    .addGroup(drivePromptLayout.createSequentialGroup()
                        .addGroup(drivePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(drivePromptLayout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(googleLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(drivePromptLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(googleAuth, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 112, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drivePromptLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(googleAuthSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        drivePromptLayout.setVerticalGroup(
            drivePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drivePromptLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(googleLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(drivePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(googleAuth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(googleAuthSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        saveCTMA.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        saveCTMA.setApproveButtonText("Save");
        saveCTMA.setDialogTitle("Ciencias Test Manager - Save Results");
        saveCTMA.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        closePrompt.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        closePrompt.setTitle("Ciencias Test Manager - Close Test?");
        closePrompt.setResizable(false);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/emblem-important.png"))); // NOI18N
        jLabel8.setText("Are you sure you want to close the test?");
        jLabel8.setIconTextGap(15);

        closeGo.setText("Yes");
        closeGo.setDefaultCapable(false);
        closeGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeGoActionPerformed(evt);
            }
        });

        jButton2.setText("No");
        jButton2.setIconTextGap(9);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout closePromptLayout = new javax.swing.GroupLayout(closePrompt.getContentPane());
        closePrompt.getContentPane().setLayout(closePromptLayout);
        closePromptLayout.setHorizontalGroup(
            closePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closePromptLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(118, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, closePromptLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeGo)
                .addContainerGap())
        );
        closePromptLayout.setVerticalGroup(
            closePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closePromptLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(closePromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeGo)
                    .addComponent(jButton2)))
        );

        qJump.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        qJump.setTitle("Ciencias Test Manager - Jump To...");
        qJump.setAlwaysOnTop(true);
        qJump.setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(relative);
        relative.setText("Relative");

        buttonGroup1.add(direct);
        direct.setText("Direct");

        buttonGroup1.add(strict);
        strict.setText("Strict");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(relative)
                    .addComponent(direct)
                    .addComponent(strict)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(relative)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(direct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(strict))
        );

        jumpText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumpTextActionPerformed(evt);
            }
        });

        jLabel9.setText("Jump Style:");

        jLabel10.setText("Jump To...");

        jumpWhat.setText("Help");
        jumpWhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumpWhatActionPerformed(evt);
            }
        });

        jump.setText("Jump");
        jump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout qJumpLayout = new javax.swing.GroupLayout(qJump.getContentPane());
        qJump.getContentPane().setLayout(qJumpLayout);
        qJumpLayout.setHorizontalGroup(
            qJumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qJumpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(qJumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jumpText, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jumpWhat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jump)
                .addContainerGap())
        );
        qJumpLayout.setVerticalGroup(
            qJumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qJumpLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(qJumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, qJumpLayout.createSequentialGroup()
                        .addGroup(qJumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jumpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(4, 4, 4)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, qJumpLayout.createSequentialGroup()
                        .addGroup(qJumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jump)
                            .addComponent(jumpWhat))
                        .addContainerGap())))
        );

        jumpHelpD.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jumpHelpD.setTitle("Ciencias Test Manager - Jump Options");
        jumpHelpD.setResizable(false);

        jLabel11.setText("<HTML><BODY>Relative: Jumps based on your current position in the test. <BR> Inputting 2 will jump you 2 question ahead (the value can be negative).");

        jLabel12.setText("<HTML><BODY>Direct: Directly jumps you to the specified question.<BR>Inputting 1 will jump you to the first question of the test, 2 will jump you to the second question etc.");

        jLabel13.setText("<HTML><BODY>Strict: Jumps you to the specified question number no matter it's position in the current test.<BR>Inputting 7 will take you to question 7 no matter what.");

        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jumpHelpDLayout = new javax.swing.GroupLayout(jumpHelpD.getContentPane());
        jumpHelpD.getContentPane().setLayout(jumpHelpDLayout);
        jumpHelpDLayout.setHorizontalGroup(
            jumpHelpDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jumpHelpDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jumpHelpDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(185, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jumpHelpDLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jumpHelpDLayout.setVerticalGroup(
            jumpHelpDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jumpHelpDLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3))
        );

        skipQuestion.setText("Skip Question");
        skipQuestion.setToolTipText("Skips the current question");
        skipQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipQuestionActionPerformed(evt);
            }
        });
        advTestMenu.add(skipQuestion);

        jumpTo.setText("Jump To...");
        jumpTo.setToolTipText("Jumps to a specified question.");
        jumpTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumpToActionPerformed(evt);
            }
        });
        advTestMenu.add(jumpTo);

        answerReview.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        answerReview.setTitle("Ciencias Test Manager - Answer Review");
        answerReview.setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Question", "Your Answer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane8.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        finalizeTestReal.setText("Finish");
        finalizeTestReal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizeTestRealActionPerformed(evt);
            }
        });

        changeAnswer.setText("Change Answer");
        changeAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeAnswerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout answerReviewLayout = new javax.swing.GroupLayout(answerReview.getContentPane());
        answerReview.getContentPane().setLayout(answerReviewLayout);
        answerReviewLayout.setHorizontalGroup(
            answerReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(answerReviewLayout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(answerReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, answerReviewLayout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, answerReviewLayout.createSequentialGroup()
                        .addComponent(changeAnswer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(finalizeTestReal)
                        .addContainerGap())))
        );
        answerReviewLayout.setVerticalGroup(
            answerReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(answerReviewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(answerReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalizeTestReal)
                    .addComponent(changeAnswer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        missingAnswers.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        missingAnswers.setTitle("Ciencias Test Manager - Missing Answers");
        missingAnswers.setResizable(false);

        listUnanswered.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(listUnanswered);

        answerQ.setText("Answer Question");
        answerQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerQActionPerformed(evt);
            }
        });

        jLabel14.setText("<HTML><BODY><CENTER>You have not answered some of the questions.</CENTER><BR>Choose a question below and click answer question to answer it.");

        javax.swing.GroupLayout missingAnswersLayout = new javax.swing.GroupLayout(missingAnswers.getContentPane());
        missingAnswers.getContentPane().setLayout(missingAnswersLayout);
        missingAnswersLayout.setHorizontalGroup(
            missingAnswersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(missingAnswersLayout.createSequentialGroup()
                .addGroup(missingAnswersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, missingAnswersLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(answerQ))
                    .addGroup(missingAnswersLayout.createSequentialGroup()
                        .addGroup(missingAnswersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(missingAnswersLayout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(missingAnswersLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        missingAnswersLayout.setVerticalGroup(
            missingAnswersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(missingAnswersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(answerQ)
                .addContainerGap())
        );

        debugExporter.setAcceptAllFileFilterUsed(false);
        debugExporter.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        debugExporter.setDialogTitle("Ciencias Test Manager - Save Debug Log");
        debugExporter.setFileFilter(new FileNameExtensionFilter("Text Files", new String[] { "txt" }));

        testEdit.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        testEdit.setTitle("Ciencias Test Manager - Create / Edit Test");
        testEdit.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                testEditWindowClosing(evt);
            }
        });

        finishTestEdit.setText("Finish");
        finishTestEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishTestEditActionPerformed(evt);
            }
        });

        loadCTMT.setText("Load");
        loadCTMT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadCTMTActionPerformed(evt);
            }
        });

        jLabel15.setText("Header / Test Settings:");

        headerEdit.setText("Edit");
        headerEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headerEditActionPerformed(evt);
            }
        });

        testEditHelp.setText("Help");
        testEditHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testEditHelpActionPerformed(evt);
            }
        });

        qList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane10.setViewportView(qList);

        editQ.setText("Edit");
        editQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editQActionPerformed(evt);
            }
        });

        newQ.setText("New");
        newQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newQActionPerformed(evt);
            }
        });

        jLabel16.setText("Test Questions:");

        headList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane11.setViewportView(headList);

        delQ.setText("Delete");
        delQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delQActionPerformed(evt);
            }
        });

        up.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/go-up.png"))); // NOI18N
        up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upActionPerformed(evt);
            }
        });

        down.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/go-down.png"))); // NOI18N
        down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downActionPerformed(evt);
            }
        });

        clearTest.setText("Clear");

        javax.swing.GroupLayout testEditLayout = new javax.swing.GroupLayout(testEdit.getContentPane());
        testEdit.getContentPane().setLayout(testEditLayout);
        testEditLayout.setHorizontalGroup(
            testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testEditLayout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                        .addGroup(testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(up, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(down, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(testEditLayout.createSequentialGroup()
                        .addGroup(testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(clearTest))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(testEditLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(testEditHelp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loadCTMT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(finishTestEdit))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testEditLayout.createSequentialGroup()
                        .addComponent(delQ)
                        .addGap(18, 18, 18)
                        .addComponent(newQ)
                        .addGap(18, 18, 18)
                        .addComponent(editQ)
                        .addGap(25, 25, 25)))
                .addContainerGap())
            .addGroup(testEditLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(headerEdit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        testEditLayout.setVerticalGroup(
            testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testEditLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testEditLayout.createSequentialGroup()
                        .addComponent(up)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(down))
                    .addGroup(testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane10)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headerEdit)
                    .addComponent(editQ)
                    .addComponent(newQ)
                    .addComponent(delQ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                .addGroup(testEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finishTestEdit)
                    .addComponent(loadCTMT)
                    .addComponent(testEditHelp)
                    .addComponent(clearTest))
                .addContainerGap())
        );

        editHead.setTitle("Ciencias Test Manager - Edit Test Settings");
        editHead.setAlwaysOnTop(true);

        jLabel17.setText("Question Randomization:");

        random.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disabled", "Enabled" }));

        jLabel18.setText("Append Period Names on Upload:");

        appendPeriod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disabled", "Enabled" }));

        userNames.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disabled", "Enabled" }));

        jLabel19.setText("Show User Names on Test Data Display:");

        jLabel20.setText("Test Name:");

        testName.setText("Test Name");

        jLabel21.setText("Drive Sub Folder:");

        driveSubFolder.setText("Drive Sub Folder");

        driveFolderRoot.setText("Drive Folder Root");

        jLabel22.setText("Drive Folder Root:");

        jLabel23.setText("Word Bank:");

        wordBank.setText("Enter words separated by commas");
        wordBank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordBankActionPerformed(evt);
            }
        });

        saveHead.setText("OK");
        saveHead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveHeadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editHeadLayout = new javax.swing.GroupLayout(editHead.getContentPane());
        editHead.getContentPane().setLayout(editHeadLayout);
        editHeadLayout.setHorizontalGroup(
            editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editHeadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel23))
                .addGap(323, 323, 323)
                .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(appendPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(random, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(testName)
                        .addComponent(driveFolderRoot)
                        .addComponent(driveSubFolder)
                        .addComponent(wordBank)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editHeadLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveHead)
                .addContainerGap())
        );
        editHeadLayout.setVerticalGroup(
            editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editHeadLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(random, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appendPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(30, 30, 30)
                .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(27, 27, 27)
                .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(testName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(driveFolderRoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(27, 27, 27)
                .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(driveSubFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(editHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(wordBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(saveHead)
                .addContainerGap())
        );

        jLabel24.setText("Question Type:");

        qTypeBox.setMaximumRowCount(3);
        qTypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Multiple Choice", "Word Bank", "Free Response" }));
        qTypeBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                qTypeBoxItemStateChanged(evt);
            }
        });

        jLabel25.setText("Question Text:");

        jLabel26.setText("Question Tag:");

        qTagEdit.setText("None");

        jLabel27.setText("Max Answers:");

        qMaxAnswersEdit.setText("1");
        qMaxAnswersEdit.setInputVerifier(new NumberVerifier());
        qMaxAnswersEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qMaxAnswersEditActionPerformed(evt);
            }
        });

        jLabel28.setText("Image:");

        qImgEdit.setText("None");
        qImgEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qImgEditActionPerformed(evt);
            }
        });

        answerList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane9.setViewportView(answerList);

        addQuestionOK.setText("OK");
        addQuestionOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addQuestionOKActionPerformed(evt);
            }
        });

        addAnswer.setText("Add Answer");

        jLabel29.setText("Answers:");

        delAnswer.setText("Delete Answer");
        delAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delAnswerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout questionEditLayout = new javax.swing.GroupLayout(questionEdit.getContentPane());
        questionEdit.getContentPane().setLayout(questionEditLayout);
        questionEditLayout.setHorizontalGroup(
            questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questionEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(questionEditLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(qTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(235, 235, 235))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionEditLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(qTextEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(questionEditLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(qTagEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(questionEditLayout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(qMaxAnswersEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionEditLayout.createSequentialGroup()
                        .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 377, Short.MAX_VALUE)
                        .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addQuestionOK, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                                .addComponent(qImgEdit))
                            .addGroup(questionEditLayout.createSequentialGroup()
                                .addComponent(delAnswer)
                                .addGap(120, 120, 120)
                                .addComponent(addAnswer)))
                        .addContainerGap())))
        );
        questionEditLayout.setVerticalGroup(
            questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questionEditLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(qTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qTextEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(37, 37, 37)
                .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(qTagEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(qMaxAnswersEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(qImgEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addAnswer)
                    .addComponent(delAnswer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addQuestionOK)
                .addContainerGap())
        );

        okAddAnswer.setText("OK");
        okAddAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okAddAnswerActionPerformed(evt);
            }
        });

        cancelAddAnswer.setText("Cancel");
        cancelAddAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAddAnswerActionPerformed(evt);
            }
        });

        jLabel30.setText("Type your answer choice below:");

        javax.swing.GroupLayout addAnswerDialogLayout = new javax.swing.GroupLayout(addAnswerDialog.getContentPane());
        addAnswerDialog.getContentPane().setLayout(addAnswerDialogLayout);
        addAnswerDialogLayout.setHorizontalGroup(
            addAnswerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAnswerDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addAnswerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(answerTF)
                    .addGroup(addAnswerDialogLayout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(0, 190, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addAnswerDialogLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelAddAnswer)
                        .addGap(6, 6, 6)
                        .addComponent(okAddAnswer)))
                .addContainerGap())
        );
        addAnswerDialogLayout.setVerticalGroup(
            addAnswerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAnswerDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(answerTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(addAnswerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelAddAnswer)
                    .addComponent(okAddAnswer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        saveTestFC.setAcceptAllFileFilterUsed(false);
        saveTestFC.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        saveTestFC.setApproveButtonText("Save");
        saveTestFC.setDialogTitle("Ciencias Test Manager - Save Test");
        saveTestFC.setFileFilter(new FileNameExtensionFilter("CTMT files", new String[] { "CTMT"}));

        answerkeyOK.setText("OK");
        answerkeyOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerkeyOKActionPerformed(evt);
            }
        });

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/emblem-important.png"))); // NOI18N
        jLabel31.setText("<HTML><BODY>Test has been saved. In order to view results, you need to generate an answer key.<BR>To do this, simply take the test and choose the correct answers.");

        javax.swing.GroupLayout answerKeyPromptLayout = new javax.swing.GroupLayout(answerKeyPrompt.getContentPane());
        answerKeyPrompt.getContentPane().setLayout(answerKeyPromptLayout);
        answerKeyPromptLayout.setHorizontalGroup(
            answerKeyPromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, answerKeyPromptLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(answerkeyOK)
                .addContainerGap())
            .addGroup(answerKeyPromptLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        answerKeyPromptLayout.setVerticalGroup(
            answerKeyPromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, answerKeyPromptLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(answerkeyOK)
                .addContainerGap())
        );

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/emblem-important.png"))); // NOI18N
        jLabel32.setText("Are you sure you want to clear this test?");

        clearYes.setText("Yes");
        clearYes.setDefaultCapable(false);
        clearYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearYesActionPerformed(evt);
            }
        });

        clearNo.setText("No");
        clearNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reallyClearLayout = new javax.swing.GroupLayout(reallyClear.getContentPane());
        reallyClear.getContentPane().setLayout(reallyClearLayout);
        reallyClearLayout.setHorizontalGroup(
            reallyClearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reallyClearLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel32)
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reallyClearLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearNo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearYes)
                .addContainerGap())
        );
        reallyClearLayout.setVerticalGroup(
            reallyClearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reallyClearLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel32)
                .addGap(18, 18, 18)
                .addGroup(reallyClearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearYes)
                    .addComponent(clearNo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/emblem-important.png"))); // NOI18N
        jLabel33.setText("Are you sure you want to close the test editor?");

        exitTEYes.setText("Yes");
        exitTEYes.setDefaultCapable(false);
        exitTEYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitTEYesActionPerformed(evt);
            }
        });

        exitTENo.setText("No");
        exitTENo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitTENoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout closeTestEditorLayout = new javax.swing.GroupLayout(closeTestEditor.getContentPane());
        closeTestEditor.getContentPane().setLayout(closeTestEditorLayout);
        closeTestEditorLayout.setHorizontalGroup(
            closeTestEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closeTestEditorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33)
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, closeTestEditorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitTENo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitTEYes)
                .addContainerGap())
        );
        closeTestEditorLayout.setVerticalGroup(
            closeTestEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closeTestEditorLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(closeTestEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitTEYes)
                    .addComponent(exitTENo))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ciencias Test Manager");
        setResizable(false);

        takeATest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/accessories-text-editor.png"))); // NOI18N
        takeATest.setText("Take A Test");
        takeATest.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        takeATest.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        takeATest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeATestActionPerformed(evt);
            }
        });

        createATest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/document-new.png"))); // NOI18N
        createATest.setText("Create A Test");
        createATest.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        createATest.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        createATest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createATestActionPerformed(evt);
            }
        });

        loadResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/x-office-document-template.png"))); // NOI18N
        loadResults.setText("Load Results");
        loadResults.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loadResults.setMaximumSize(new java.awt.Dimension(140, 61));
        loadResults.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        loadResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadResultsActionPerformed(evt);
            }
        });

        aboutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_res/edit-find.png"))); // NOI18N
        aboutButton.setText("About");
        aboutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aboutButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        advancedMenu.setLabel("Advanced >");
        advancedMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                advancedMenuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(createATest, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(aboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(takeATest, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(loadResults, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(advancedMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 222, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(takeATest, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loadResults, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(createATest, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(aboutButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(advancedMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void takeATestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeATestActionPerformed
        debugConText.append(LINESEP + "Attempted to create file dialog");
        int returnVal = openATest.showOpenDialog(MainWindow.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        file = openATest.getSelectedFile();
        debugConText.append(LINESEP + "Test file was selected: " + file.toString());
            try {
                CTMTParser.startParsing(file);
            } catch (IOException ex) {
                throwError("An IOException occured. Make sure you have rights to access the file and it is not in use by any other program.");
            }
            if(CTMTParser.getRandomizationSetting() == 1){QArray.randomize();}
if(!CTMTParser.getErrors().isEmpty()){throwError(CTMTParser.getErrors());return;}
currentIndex=0;
renderTest();
jumpTo.setEnabled(true);
UserAnswerManager.init();
testWindow.show();
testWindow.pack();
skipQuestion.setEnabled(true);
nextQuestion.setText("Next ->");
}
    }//GEN-LAST:event_takeATestActionPerformed

    /**
     * Displays an error dialog with the specified text.
     * @param error The text of the error to display
     */
    public static void throwError(String error){
    errorText.setContentType("text/html");
    if(!error.startsWith("<HTML><BODY BGCOLOR=#D6D9DF>")){error = "<HTML><BODY BGCOLOR=#D6D9DF>" + error + "<HTML></BODY BGCOLOR=#D6D9DF>";}
    errorText.setText(error);
    errorText.setEditable(FALSE);
    errorText.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(214, 217, 223))); //more hacks!
    errorBox.pack();
    errorBox.show();
    }
    
    private void renderTest(){
     if(currentIndex != 0){previousQuestion.setVisible(true);}
     subResponse.setVisible(FALSE);
     testWindow.setTitle("Ciencias Tesr Manager - " + CTMTParser.getTestName());
     questionNum.setText("Question #" + QArray.getQuestion(currentIndex).getQuestionNumber());
     debugConText.append(LINESEP + "Preparing question text");
     String qTexts = TextRenderingAssist.prepareText(QArray.getQuestion(currentIndex).getText(),80);
     testWindow.pack();
     if(!QArray.getQuestion(currentIndex).getImage().equals("None")){
         debugConText.append(LINESEP + "Attempting to load image");
     if(!qTexts.endsWith("<BR>")){qTexts=qTexts + "<BR>";}
     String fileTest = file.getParent();
     debugConText.append(LINESEP + "Working Directory of the CTMT file: " + fileTest);
     File f = new File(fileTest + QArray.getQuestion(currentIndex).getImage());
     qTexts="<HTML><BODY><CENTER>" +qTexts + "<img src=\"file:"+f.toString()+"\"></CENTER></BODY></HTML>";
     debugConText.append(LINESEP + "Image Code: " + qTexts);
     int width;
     int height;
         try {
             BufferedImage bimg = ImageIO.read(new File(f.toString()));
             width = bimg.getWidth()-testWindow.getWidth();
             height = bimg.getHeight()-testWindow.getHeight();
             if(width > 0){testWindow.setSize(testWindow.getWidth() + width, testWindow.getHeight());}
             if(height > 0){testWindow.setSize(testWindow.getWidth(), testWindow.getHeight() + height + 100);}
             Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
             double sHeight = screenSize.getHeight();
             double sWidth = screenSize.getWidth();
             if(testWindow.getHeight() > sHeight || testWindow.getWidth() > sWidth){
             testWindow.setSize(screenSize);
             }
         } catch (IOException ex) {
             debugConText.append(LINESEP + "Unable to access image. The resize routine has been skipped.");
         }
     //testWindow.pack();
     }
            questionText.setText(qTexts);
            if(currentIndex <= 0){previousQuestion.setVisible(FALSE);}
            DefaultListModel lm = new DefaultListModel();
            if(QArray.getQuestion(currentIndex).getType().equals("FREERESPONSE"))
            {
            DefaultListModel lm2 = new DefaultListModel();
            try{if(UserAnswerManager.getAnswerIndex(currentIndex) != null || !UserAnswerManager.getAnswerIndex(currentIndex).equals("Null")){lm2.addElement(UserAnswerManager.getAnswerIndex(currentIndex));}}
            catch(java.lang.NullPointerException e){}
            subResponse.setVisible(TRUE);
            jList1.setModel(lm2);
            jList1.setSelectedIndex(0);
            return;}
            
            if(QArray.getQuestion(currentIndex).getType().equals("WORDBANK")){
            for (String s : WordBankMan.getWordBank()){
            lm.addElement(s);
            }
            jList1.setModel(lm); return;
            }
            for(String s : QArray.getQuestion(currentIndex).getAnswers()){
            lm.addElement(s);}
            if(1 != QArray.getQuestion(currentIndex).getMaxAnswers()){jList1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);} else {
                jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            }
            jList1.setModel(lm);
            try{
            if(UserAnswerManager.getAnswerIndex(currentIndex).equals("Null")){return;}
            String ansi = UserAnswerManager.getAnswerIndex(currentIndex);
            if(ansi != null){
            String[] si = ansi.split(",");
            if(si.length == 1){
            jList1.setSelectedIndex(Integer.parseInt(si[0]));}
            else{
            int[] actualIndexes = new int[si.length];
            for(int i = 0; i < si.length; i++){
            actualIndexes[i] = Integer.parseInt(si[i]);}
            jList1.setSelectedIndices(actualIndexes);}
            }
            }
            catch(java.lang.NullPointerException e){}
    
    }
    
    private void renderSingleQuestion(Question q){
        currentIndex = QArray.getQuestionIndex(q);
    subResponse.setVisible(FALSE);
    skipQuestion.setEnabled(false);
    jumpTo.setEnabled(false);
    nextQuestion.setText("Answer");
     testWindow.setTitle("Ciencias Tesr Manager - " + CTMTParser.getTestName());
     questionNum.setText("Question #" + q.getQuestionNumber());
     debugConText.append(LINESEP + "Preparing question text");
     String qTexts = TextRenderingAssist.prepareText(q.getText(),80);
     testWindow.pack();
     if(!q.getImage().equals("None")){
         debugConText.append(LINESEP + "Attempting to load image");
     if(!qTexts.endsWith("<BR>")){qTexts=qTexts + "<BR>";}
     String fileTest = file.getParent();
     debugConText.append(LINESEP + "Working Directory of the CTMT file: " + fileTest);
     File f = new File(fileTest + q.getImage());
     qTexts="<HTML><BODY><CENTER>" +qTexts + "<img src=\"file:"+f.toString()+"\"></CENTER></BODY></HTML>";
     debugConText.append(LINESEP + "Image Code: " + qTexts);
     int width;
     int height;
         try {
             BufferedImage bimg = ImageIO.read(new File(f.toString()));
             width = bimg.getWidth()-testWindow.getWidth();
             height = bimg.getHeight()-testWindow.getHeight();
             if(width > 0){testWindow.setSize(testWindow.getWidth() + width, testWindow.getHeight());}
             if(height > 0){testWindow.setSize(testWindow.getWidth(), testWindow.getHeight() + height + 100);}
             Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
             double sHeight = screenSize.getHeight();
             double sWidth = screenSize.getWidth();
             if(testWindow.getHeight() > sHeight || testWindow.getWidth() > sWidth){
             testWindow.setSize(screenSize);
             }
         } catch (IOException ex) {
             debugConText.append(LINESEP + "Unable to access image. The resize routine has been skipped.");
         }
     }
            questionText.setText(qTexts);
            previousQuestion.setVisible(FALSE);
            DefaultListModel lm = new DefaultListModel();
            if(q.getType().equals("FREERESPONSE"))
            {
            DefaultListModel lm2 = new DefaultListModel();
            subResponse.setVisible(TRUE);
            jList1.setModel(lm2);
            return;}
            
            if(q.getType().equals("WORDBANK")){
            WordBankMan.unUseWord(currentIndex);
            for (String s : WordBankMan.getPristineWordBank()){
            lm.addElement(s);
            }
            jList1.setModel(lm); 
            return;
            }
            for(String s : q.getAnswers()){
            lm.addElement(s);}
            if(1 != q.getMaxAnswers()){jList1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);} else {
                jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            }
            jList1.setModel(lm);
            finalize=1;
    }
    
    private void createATestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createATestActionPerformed
       testEdit.show();
       testEdit.pack();
       TestEditorManager.initQArray();
    }//GEN-LAST:event_createATestActionPerformed

    private void loadResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadResultsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadResultsActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        aboutWindow.show();
        aboutWindow.pack();
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void advancedMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_advancedMenuMouseClicked
        advMenu.show(advancedMenu,advancedMenu.getWidth()/2, advancedMenu.getHeight()/2);
    }//GEN-LAST:event_advancedMenuMouseClicked

    private void uploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uploadFileActionPerformed

    private void nextQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextQuestionActionPerformed
        if(finalize >= 1){finalizeTest();return;}
        if(addAnswer() == 0){return;}
        currentIndex++;
        previousQuestion.setVisible(TRUE);
        if(currentIndex == QArray.getIndexes()){nextQuestion.setText("Finish");finalize=1; skipQuestion.setEnabled(false);}
        renderTest();
        testWindow.pack();
    }//GEN-LAST:event_nextQuestionActionPerformed

    private void previousQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousQuestionActionPerformed
        currentIndex--;
        skipQuestion.setEnabled(true);
        if(QArray.getQuestion(currentIndex).getType().equals("WORDBANK")){WordBankMan.unUseWord(currentIndex+1);}
        if(currentIndex <= -1){currentIndex=0;}
        if(currentIndex == 0){previousQuestion.setVisible(FALSE);}
        if(currentIndex != QArray.getIndexes()){nextQuestion.setText("Next ->");finalize=0;}
        if(QArray.getQuestion(currentIndex).getType().equals("FREERESPONSE")){
            String frTemp = UserAnswerManager.getFullAnswer(currentIndex);
            if(QArray.getQuestion(currentIndex).getQuestionNumber() < 9){frTemp = frTemp.substring(1);}
            else if (QArray.getQuestion(currentIndex).getQuestionNumber() < 100){frTemp = frTemp.substring(2);}
            else{frTemp = frTemp.substring(3);}
            frTemp = frTemp.replace("=","");
            freeText.setText(frTemp);
        }
        renderTest();
        testWindow.pack();
    }//GEN-LAST:event_previousQuestionActionPerformed

    private void errorCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorCloseActionPerformed
 errorBox.dispose();//errorBox.dispatchEvent(new WindowEvent(errorBox, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_errorCloseActionPerformed

private int addAnswer(){
if(jList1.isSelectionEmpty()){throwError("No entries were selected.");return 0;}
        if(jList1.getSelectedIndices().length != QArray.getQuestion(currentIndex).getMaxAnswers()){throwError("Too few or too many entries were selected.");return 0;}
        String indicesConcat = "";
        if(QArray.getQuestion(currentIndex).getType().equals("WORDBANK")){WordBankMan.useWord((String)jList1.getSelectedValue(),currentIndex+1);
        indicesConcat = "" + jList1.getSelectedValue();
        }
        if(QArray.getQuestion(currentIndex).getType().equals("FREERESPONSE")){
        indicesConcat = "" + jList1.getSelectedValue();
        }
        if(QArray.getQuestion(currentIndex).getType().equals("MULTIPLECHOICE")){int[] indices = jList1.getSelectedIndices();
        for(int i = 0; i<indices.length; i++){
        indicesConcat= indicesConcat + indices[i];
        if(indices.length != i+1){indicesConcat = indicesConcat + ",";}
        }}else{}
       String entry = QArray.getQuestion(currentIndex).getQuestionNumber() + "=" + indicesConcat;
        debugConText.append(LINESEP + "CTMA Output: : " + entry);
        UserAnswerManager.add(entry,currentIndex);
        return 1;
}
    
    private void freeSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freeSubmitActionPerformed
        frText = freeText.getText();
        if(frText.equals("")){throwError("No text was entered");}else{
        DefaultListModel lmfr = new DefaultListModel();
        lmfr.add(0,frText);
        jList1.setModel(lmfr);
        freeResp.dispose();
        }
        
    }//GEN-LAST:event_freeSubmitActionPerformed

    private void subResponseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subResponseActionPerformed
        freeResp.show();
        freeResp.pack();
        //if(!frText.equals("")){freeText.setText(frText);}
    }//GEN-LAST:event_subResponseActionPerformed

    private void exportDebugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportDebugActionPerformed
        String debugText = debugConText.getText().toString();
try
{
    int returnVal = debugExporter.showSaveDialog(MainWindow.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        File sFile2 = debugExporter.getSelectedFile();
FileWriter writer = new FileWriter(sFile2);
    writer.write(debugText);
    writer.close();}

}
catch ( IOException e)
{
    throwError("An IOException occured. Make sure the file is not in use and you have permission to access the file.");
    debugConText.append(LINESEP + "IOException occured while trying to export the debug log");
}

    }//GEN-LAST:event_exportDebugActionPerformed

    private void userNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameFieldActionPerformed

    private void googleLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_googleLinkMouseClicked
        String url =  GoogleDriveManager.generateSession();
        if(Desktop.isDesktopSupported()){
        try{Desktop.getDesktop().browse(new URI(url));
            }catch (URISyntaxException | IOException ex) {
                throwError("Something went wrong. Try copying this url into your web browser: " + url);
                debugConText.append(LINESEP + "Unable to open google drive url.");
            }
                
        
        } else{throwError("Something went wrong. Try copying this url into your web browser:" + url);}
    }//GEN-LAST:event_googleLinkMouseClicked

    private void uploadAnswersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadAnswersActionPerformed
    drivePrompt.show();
    drivePrompt.pack();
    }//GEN-LAST:event_uploadAnswersActionPerformed

    private void saveAnswersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAnswersActionPerformed
        int returnVal = saveCTMA.showSaveDialog(MainWindow.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        sFile = openATest.getSelectedFile();
        int didItWork = TextRenderingAssist.testForBadCharacters(userNameField.getText());
        if(didItWork == 1){throwError("Your user name contains illegal characters or is too long.");return;}
        didItWork = TextRenderingAssist.testForBadCharacters(periodField.getText());
        if(didItWork == 1){throwError("Your period number contains illegal characters or is too long.");return;}
            ArrayList<String> sortedAnswers = UserAnswerManager.sortAnswers();
            try {
                FileWriter f = new FileWriter(sFile.getParent() + "_" + userNameField.getText() + ".ctma");
                debugConText.append(LINESEP + "File Path: " + sFile.getParent() + "_" + userNameField.getText() + ".ctma");
                f.write("[" + userNameField.getText() +" PERIOD " + periodField.getText() + "]");
                f.write(LINESEP);
                for (String p : sortedAnswers){
                f.write(p);
                f.write(LINESEP);
                }
                f.close();
                finalizeTest.dispose();
                testWindow.dispose();
                jumpHelpD.dispose();
                answerReview.dispose();
                missingAnswers.dispose();
            } 
            catch (IOException ex) {
                throwError("Unable to write file! Make sure you have appropriate permissions.");
            }
        }
    }//GEN-LAST:event_saveAnswersActionPerformed

    private void debugModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debugModeActionPerformed
        debugCon.show();
        debugCon.pack();
    }//GEN-LAST:event_debugModeActionPerformed

    private void testWindowWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_testWindowWindowClosing
        closePrompt.show();
        closePrompt.pack();
    }//GEN-LAST:event_testWindowWindowClosing

    private void closeGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeGoActionPerformed
        testWindow.dispose();
        closePrompt.dispose();
        finalizeTest.dispose();
        testWindow.dispose();
        jumpHelpD.dispose();
        answerReview.dispose();
        missingAnswers.dispose();
    }//GEN-LAST:event_closeGoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        closePrompt.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jumpTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumpTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumpTextActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jumpHelpD.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumpActionPerformed
     if(strict.isSelected()){
     int tempCurrentIndex = Integer.parseInt(jumpText.getText());
     for(int i = 0; i <= QArray.getIndexes(); i++){
     if(QArray.getQuestion(i).getQuestionNumber() == tempCurrentIndex){
     currentIndex = i; break;}
     }
     renderTest(); qJump.dispose(); return;
     }
     
     if(relative.isSelected()){
     int tempCurrentIndex = currentIndex + Integer.parseInt(jumpText.getText());
     if(tempCurrentIndex < 0 || tempCurrentIndex > QArray.getIndexes() || tempCurrentIndex == currentIndex){throwError("Invalud Index");}
     else{currentIndex = tempCurrentIndex; renderTest(); qJump.dispose(); return;}
     }
     
     if(direct.isSelected()){
     int tempCurrentIndex = Integer.parseInt(jumpText.getText());
     if(tempCurrentIndex < 1 || tempCurrentIndex > QArray.getIndexes()+1 || tempCurrentIndex == currentIndex){throwError("Invalud Index");}
     else{currentIndex = tempCurrentIndex; qJump.dispose(); renderTest(); return;}
     throwError("Please select a jumping option.");
     }
    }//GEN-LAST:event_jumpActionPerformed

    private void advTestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advTestButtonActionPerformed
        advTestMenu.show(advTestButton,advTestButton.getWidth()/2, advTestButton.getHeight()/2);
    }//GEN-LAST:event_advTestButtonActionPerformed

    private void jumpToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumpToActionPerformed
        qJump.show();
        qJump.pack();
    }//GEN-LAST:event_jumpToActionPerformed

    private void skipQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipQuestionActionPerformed
        currentIndex++;
        previousQuestion.setEnabled(TRUE);
        renderTest();
    }//GEN-LAST:event_skipQuestionActionPerformed

    private void answerQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerQActionPerformed
    if(listUnanswered.isSelectionEmpty()){throwError("No question selected!");return;}
    renderSingleQuestion((Question)listUnanswered.getSelectedValue());
    testWindow.toFront();
    }//GEN-LAST:event_answerQActionPerformed

    private void reviewQuestionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewQuestionsActionPerformed
        initTable();
        answerReview.pack();
        answerReview.show();
    }//GEN-LAST:event_reviewQuestionsActionPerformed

    private void initTable()
    {
    for(int i = 0; i<=QArray.getIndexes(); i++){
        jTable1.setValueAt(QArray.getQuestion(i).getText(),i,0);}
        
        for(int i = 0; i<=QArray.getIndexes(); i++){
            switch (QArray.getQuestion(i).getType()) {
                case "MULTIPLECHOICE":
                    try{jTable1.setValueAt(QArray.getQuestion(i).getAnswers().get(Integer.parseInt(UserAnswerManager.getAnswerIndex(i))),i,1);}
                    catch(java.lang.NumberFormatException e){
                    jTable1.setValueAt(UserAnswerManager.getAnswerIndex(i),i,1);
                    }
                    break;
                case "FREERESPONSE":
                case "WORDBANK":
                    jTable1.setValueAt(UserAnswerManager.getAnswerIndex(i),i,1);
                    break;
            }
        
        }
    }
    
    private void changeAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeAnswerActionPerformed
        int qNum = jTable1.getSelectedRow();
        try{renderSingleQuestion(QArray.getQuestion(qNum));
        testWindow.toFront();}catch (java.lang.ArrayIndexOutOfBoundsException e){
        throwError("Invalid question selected.");
        }
    }//GEN-LAST:event_changeAnswerActionPerformed

    private void finalizeTestRealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizeTestRealActionPerformed
       finalizeTest.show();
       finalizeTest.pack();
    }//GEN-LAST:event_finalizeTestRealActionPerformed

    private void jumpWhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumpWhatActionPerformed
        jumpHelpD.show();
        jumpHelpD.pack();
    }//GEN-LAST:event_jumpWhatActionPerformed

    private void googleAuthSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_googleAuthSubmitActionPerformed
    try {
        GoogleDriveManager.createService(googleAuth.getText());
    } catch (IOException ex) {
        throwError("An error occurred. Make sure you are connected to the internet and the code you entered was correct.");
    }
    int returnVal = saveCTMA.showSaveDialog(MainWindow.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        sFile = openATest.getSelectedFile();
        int didItWork = TextRenderingAssist.testForBadCharacters(userNameField.getText());
        if(didItWork == 1){throwError("Your user name contains illegal characters or is too long.");return;}
        didItWork = TextRenderingAssist.testForBadCharacters(periodField.getText());
        if(didItWork == 1){throwError("Your period number contains illegal characters or is too long.");return;}
            ArrayList<String> sortedAnswers = UserAnswerManager.sortAnswers();
            String fileUpload = sFile.getParent() + "_" + userNameField.getText() + ".ctma";
            try {
                FileWriter f = new FileWriter(fileUpload);
                debugConText.append(LINESEP + fileUpload);
                f.write("[" + userNameField.getText() +" PERIOD " + periodField.getText() + "]");
                f.write(LINESEP);
                for (String p : sortedAnswers){
                f.write(p);
                f.write(LINESEP);
                }
                f.close();
            }catch(IOException ex){
            throwError("Unable to write file! Make sure you have appropriate permissions.");
            }
        try {
            String folderID;
            String folderName;
            if(CTMTParser.getAppendPeriodSetting() == 1){
            folderName=CTMTParser.getDriveSubFolder() + "_" + periodField.getText();
            }else{
            folderName=CTMTParser.getDriveSubFolder();
            }
            if(GoogleDriveManager.getFileID(folderName).isEmpty() || GoogleDriveManager.getFileID(folderName).equals("Error")){
            folderID=GoogleDriveManager.createFolder(folderName, GoogleDriveManager.getFileID(CTMTParser.getDriveFolderRoot()));
            }else{folderID=GoogleDriveManager.getFileID(folderName);}
            GoogleDriveManager.uploadFile(new File(fileUpload), "_" + userNameField.getText() + ".ctma", folderID);
            finalizeTest.dispose();
            testWindow.dispose();
            jumpHelpD.dispose();
            answerReview.dispose();
            missingAnswers.dispose();
            drivePrompt.dispose();
        } catch (IOException ex) {
            throwError("Unable to find the directory to upload to. Please manually upload the file.");
        }
        }
    }//GEN-LAST:event_googleAuthSubmitActionPerformed

    private void headerEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headerEditActionPerformed
       editHead.show();
       editHead.pack();
    }//GEN-LAST:event_headerEditActionPerformed

    private void saveHeadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveHeadActionPerformed
        TestEditorManager.setRandomize(random.getSelectedIndex());
        TestEditorManager.setPeriodAppend(appendPeriod.getSelectedIndex());
        TestEditorManager.setUserNames(userNames.getSelectedIndex());
        TestEditorManager.setTestName(testName.getText());
        TestEditorManager.setDriveFolderRoot(driveFolderRoot.getText());
        TestEditorManager.setDriveSubFolder(driveSubFolder.getText());
        if(wordBank.getText().contains(",") || !wordBank.getText().isEmpty() || !wordBank.getText().equals("Enter words separated by commas")){TestEditorManager.setWordBank(wordBank.getText());}
        DefaultListModel lm = new DefaultListModel();
        lm.addElement("ENABLERANDOMIZATION="+TestEditorManager.getRandomization());
        lm.addElement("APPENDPERIOD="+TestEditorManager.getAppendPeriod());
        lm.addElement("ENABLEUSERNAMES="+TestEditorManager.getEnableUserNames());
        lm.addElement("TESTNAME="+TestEditorManager.getTestName());
        lm.addElement("DRIVEFOLDERROOT="+TestEditorManager.getDriveFolderRoot());
        lm.addElement("DRIVESUBFOLDER="+TestEditorManager.getDriveSubFolder());
        lm.addElement("WORDBANK="+TestEditorManager.getWordBank());
        headList.setModel(lm);
        editHead.dispose();
    }//GEN-LAST:event_saveHeadActionPerformed

    private void wordBankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordBankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wordBankActionPerformed

    private void qMaxAnswersEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qMaxAnswersEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qMaxAnswersEditActionPerformed

    private void qImgEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qImgEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qImgEditActionPerformed

    private void newQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newQActionPerformed
        questionEdit.show();
        questionEdit.pack();
    }//GEN-LAST:event_newQActionPerformed

    private void qTypeBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_qTypeBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED && !qTypeBox.getSelectedItem().equals("Multiple Choice")){
        setAnswerEditting(false);
        }else if (evt.getStateChange() == ItemEvent.SELECTED && qTypeBox.getSelectedItem().equals("Multiple Choice")){setAnswerEditting(true);}
    }//GEN-LAST:event_qTypeBoxItemStateChanged

    private void cancelAddAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAddAnswerActionPerformed
        addAnswerDialog.dispose();
    }//GEN-LAST:event_cancelAddAnswerActionPerformed

    private void okAddAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okAddAnswerActionPerformed
        if(!answerTF.getText().isEmpty()){ansListM.addElement(answerTF.getText());
        addAnswerDialog.dispose();
        }
    }//GEN-LAST:event_okAddAnswerActionPerformed

    private void delAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delAnswerActionPerformed
        ansListM.removeElementAt(answerList.getSelectedIndex());
    }//GEN-LAST:event_delAnswerActionPerformed

    private void addQuestionOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addQuestionOKActionPerformed
        String qTypeTemp;
        if(qTypeBox.getSelectedItem().equals("Multiple Choice")){
        qTypeTemp = "MULTIPLECHOICE";
        }   else if(qTypeBox.getSelectedItem().equals("Word Bank")){
        qTypeTemp = "WORDBANK";
        }else {qTypeTemp = "FREERESPONSE";}
        ArrayList<String> tempAns = new ArrayList<>();
        for(int i = 0;  i<ansListM.size(); i++ ){
        tempAns.add(ansListM.get(i).toString());
        }
        Question qTemp = new Question(ansListM.size()+1,qTextEdit.getText(),qTypeTemp,qTagEdit.getText(),tempAns,Integer.parseInt(qMaxAnswersEdit.getText()),qImgEdit.getText());
        TestEditorManager.addQuestion(qTemp);
        qListM.addElement(qTemp);
        ansListM.clear();
        questionEdit.dispose();
    }//GEN-LAST:event_addQuestionOKActionPerformed

    private void delQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delQActionPerformed
        int i = qList.getSelectedIndex();
        qListM.removeElementAt(i);
        TestEditorManager.removeQuestion(i);
    }//GEN-LAST:event_delQActionPerformed

    private void editQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editQActionPerformed
        Question q;
        try{q=TestEditorManager.getQuestion(qList.getSelectedIndex());}catch(java.lang.IndexOutOfBoundsException e){return;}
        questionEdit.show();
        questionEdit.pack();
        qTextEdit.setText(q.getText());
        qTagEdit.setText(q.getTag());
        qMaxAnswersEdit.setText(""+q.getMaxAnswers());
        qImgEdit.setText(q.getImage());
        for(String s : q.getAnswers()){
        ansListM.addElement(s);
        }
        String qType = q.getType();
        if(qType.equals("MULTIPLECHOICE")){
        qTypeBox.setSelectedIndex(0);
        setAnswerEditting(true);
        }else if (qType.equals("WORDBANK")){
        qTypeBox.setSelectedIndex(1);
        setAnswerEditting(false);
        }else{qTypeBox.setSelectedIndex(2);setAnswerEditting(false);}
    }//GEN-LAST:event_editQActionPerformed

    private void upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upActionPerformed
        int index = qList.getSelectedIndex();
        if(index - 1 < 0){return;}
        TestEditorManager.swapQuestions(index, index-1);
        qListM.clear();
        for(Question q : TestEditorManager.getQArray()){
        qListM.addElement(q);
        }
        
    }//GEN-LAST:event_upActionPerformed

    private void downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downActionPerformed
        int index = qList.getSelectedIndex();
        if(index + 1 > qListM.size()){return;}
        TestEditorManager.swapQuestions(index, index+1);
        qListM.clear();
        for(Question q : TestEditorManager.getQArray()){
        qListM.addElement(q);
        }
    }//GEN-LAST:event_downActionPerformed

    private void finishTestEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishTestEditActionPerformed
       int returnVal = saveTestFC.showSaveDialog(MainWindow.this);
        if (returnVal == JFileChooser.APPROVE_OPTION){
        File f = saveTestFC.getSelectedFile();
        String testFile;
        if(!f.getParent().endsWith(".ctmt")){testFile = f.getParent() + ".ctmt";}
        else{testFile = f.getParent();}
           try {
               FileWriter fw = new FileWriter(testFile);
               fw.write("[START_HEAD]");
               fw.write(LINESEP);
               fw.write("ENABLERANDOMIZATION="+TestEditorManager.getRandomization());
               fw.write(LINESEP);
               fw.write("WORDBANK="+TestEditorManager.getWordBank());
               fw.write(LINESEP);
               fw.write("APPENDPERIOD="+TestEditorManager.getAppendPeriod());
               fw.write(LINESEP);
               fw.write("TESTNAME="+TestEditorManager.getTestName());
               fw.write(LINESEP);
               fw.write("DRIVEFOLDERROOT="+TestEditorManager.getDriveFolderRoot());
               fw.write(LINESEP);
               fw.write("DRIVESUBFOLDER="+TestEditorManager.getDriveSubFolder());
               fw.write(LINESEP);
               String ctma = saveTestFC.getSelectedFile().getName();
               ctma = ctma.replace(".ctmt",".ctma");
               ctma = ctma.replace(".CTMT",".CTMA");
               fw.write("CTMANAME="+ctma);
               fw.write(LINESEP);
               fw.write("ENABLEUSERNAMES="+TestEditorManager.getEnableUserNames());
               fw.write(LINESEP);
               fw.write("[END_HEAD]");
               fw.write(LINESEP);
               fw.write(LINESEP);
               TestEditorManager.fixQNums();
               for(Question q : TestEditorManager.getQArray()){
               fw.write("[START_QUESTION]");
               fw.write(LINESEP);    
               fw.write("QUESTIONNUMBER="+q.getQuestionNumber());
               fw.write(LINESEP);
               fw.write("QUESTIONSTYLE="+q.getType());
               fw.write(LINESEP);
               fw.write("QUESTIONTITLE="+q.getText());
               fw.write(LINESEP);
               fw.write("QUESTIONTAG="+q.getTag());
               for(String s : q.getAnswers()){
               fw.write("ANSWERCHOICE=" + s);
               fw.write(LINESEP);
               }
               fw.write("[END_QUESTION]");
               fw.write(LINESEP);
               }
               fw.close();
               answerKeyPrompt.show();
               answerKeyPrompt.pack();
           } catch (IOException ex) {
               throwError("Unable to write the test file. Make sure you have appropriate permissions.");
           }
        }
    }//GEN-LAST:event_finishTestEditActionPerformed

    private void loadCTMTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadCTMTActionPerformed
        int returnVal = openATest.showOpenDialog(MainWindow.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        file = openATest.getSelectedFile();
        debugConText.append(LINESEP + "Test file was selected: " + file.toString());
            try {
                CTMTParser.startParsing(file);
            } catch (IOException ex) {
                throwError("An IOException occured. Make sure you have rights to access the file and it is not in use by any other program.");
            }
if(!CTMTParser.getErrors().isEmpty()){throwError(CTMTParser.getErrors());return;}
DefaultListModel newHead = new DefaultListModel();
TestEditorManager.setDriveFolderRoot(CTMTParser.getDriveFolderRoot());
newHead.addElement("DRIVEFOLDERROOT=" + CTMTParser.getDriveFolderRoot());
driveFolderRoot.setText(CTMTParser.getDriveFolderRoot());
TestEditorManager.setDriveSubFolder(CTMTParser.getDriveSubFolder());
newHead.addElement("DRIVESUBFOLDER=" + CTMTParser.getDriveSubFolder());
driveSubFolder.setText(CTMTParser.getDriveSubFolder());
TestEditorManager.setPeriodAppend(CTMTParser.getAppendPeriodSetting());
newHead.addElement("APPENDPERIOD=" + CTMTParser.getAppendPeriodSetting());
appendPeriod.setSelectedIndex(CTMTParser.getAppendPeriodSetting());
TestEditorManager.setRandomize(CTMTParser.getRandomizationSetting());
newHead.addElement("ENABLERANDOMIZATION=" + CTMTParser.getRandomizationSetting());
random.setSelectedIndex(CTMTParser.getRandomizationSetting());
TestEditorManager.setUserNames(CTMTParser.getEnableUserNamesSetting());
newHead.addElement("ENABLEUSERNAMES=" + CTMTParser.getEnableUserNamesSetting());
userNames.setSelectedIndex(CTMTParser.getEnableUserNamesSetting());
String wb = "";
for(String s : WordBankMan.getPristineWordBank()){
wb = wb + s +",";
}
TestEditorManager.setWordBank(wb);
newHead.addElement("WORDBANK=" + wb);
wordBank.setText(wb);
TestEditorManager.setTestName(CTMTParser.getTestName());
testName.setText(CTMTParser.getTestName());
newHead.addElement("TESTNAME=" + CTMTParser.getTestName());
headList.setModel(newHead);
for(Question q : QArray.getList()){
qListM.addElement(q);
}
qList.setModel(qListM);
        }
    }//GEN-LAST:event_loadCTMTActionPerformed

    private void answerkeyOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerkeyOKActionPerformed
        answerKeyPrompt.dispose();
    }//GEN-LAST:event_answerkeyOKActionPerformed

    private void testEditWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_testEditWindowClosing
        closeTestEditor.show();
        closeTestEditor.pack();
    }//GEN-LAST:event_testEditWindowClosing

    private void clearYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearYesActionPerformed
        headList.setModel(new DefaultListModel());
        qListM.clear();
        reallyClear.dispose();
    }//GEN-LAST:event_clearYesActionPerformed

    private void clearNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearNoActionPerformed
        reallyClear.dispose();
    }//GEN-LAST:event_clearNoActionPerformed

    private void exitTEYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitTEYesActionPerformed
        closeTestEditor.dispose();
        testEdit.dispose();
    }//GEN-LAST:event_exitTEYesActionPerformed

    private void exitTENoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitTENoActionPerformed
        closeTestEditor.dispose();
    }//GEN-LAST:event_exitTENoActionPerformed

    private void testEditHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testEditHelpActionPerformed
         if(Desktop.isDesktopSupported()){
        try{Desktop.getDesktop().browse(new URI("file://user_doc/index.html"));
            }catch (URISyntaxException | IOException ex) {
                throwError("Something went wrong. Open \"index.html\" located in the user_doc folder.");
                debugConText.append(LINESEP + "Unable to open help file url.");
            }
                
        
        } else{throwError("Something went wrong. Open \"index.html\" located in the user_doc folder.");
}
    }//GEN-LAST:event_testEditHelpActionPerformed

    private void setAnswerEditting(boolean b){
    if(!b){
    delAnswer.disable();
    addAnswer.disable();
    }else{
    delAnswer.enable();
    addAnswer.enable();
    }
    }
    
    private void finalizeTest(){
        if(addAnswer() == 0){return;}
    if(UserAnswerManager.hasNull()){
    DefaultListModel lm = new DefaultListModel();
    for(Question q : UserAnswerManager.getUnansweredQuestions()){
    lm.addElement(q);
    }
    listUnanswered.setModel(lm);
    listUnanswered.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    missingAnswers.show();
    missingAnswers.pack();
    return;
    }
    if(finalize == 1 && !finalizeTest.isVisible()){
    finalizeTest.show();
    finalizeTest.pack();}
    initTable();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JFrame aboutWindow;
    private javax.swing.JButton addAnswer;
    private javax.swing.JDialog addAnswerDialog;
    private javax.swing.JButton addQuestionOK;
    private javax.swing.JPopupMenu advMenu;
    private javax.swing.JButton advTestButton;
    private javax.swing.JPopupMenu advTestMenu;
    private java.awt.Button advancedMenu;
    private javax.swing.JDialog answerKeyPrompt;
    private javax.swing.JList answerList;
    private javax.swing.JButton answerQ;
    private javax.swing.JFrame answerReview;
    private javax.swing.JTextField answerTF;
    private javax.swing.JButton answerkeyOK;
    private static javax.swing.JComboBox appendPeriod;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelAddAnswer;
    private javax.swing.JButton changeAnswer;
    private javax.swing.JButton clearNo;
    private javax.swing.JButton clearTest;
    private javax.swing.JButton clearYes;
    private javax.swing.JButton closeGo;
    private javax.swing.JDialog closePrompt;
    private javax.swing.JDialog closeTestEditor;
    private javax.swing.JButton createATest;
    private javax.swing.JFrame debugCon;
    private static javax.swing.JTextArea debugConText;
    private javax.swing.JFileChooser debugExporter;
    private javax.swing.JMenuItem debugMode;
    private javax.swing.JButton delAnswer;
    private javax.swing.JButton delQ;
    private javax.swing.JRadioButton direct;
    private javax.swing.JButton down;
    private static javax.swing.JTextField driveFolderRoot;
    private javax.swing.JFrame drivePrompt;
    private static javax.swing.JTextField driveSubFolder;
    private javax.swing.JDialog editHead;
    private javax.swing.JButton editQ;
    private static javax.swing.JDialog errorBox;
    private java.awt.Button errorClose;
    private static javax.swing.JTextPane errorText;
    private static javax.swing.JLabel errorTextold;
    private javax.swing.JButton exitTENo;
    private javax.swing.JButton exitTEYes;
    private static java.awt.Button exportDebug;
    private javax.swing.JFrame finalizeTest;
    private javax.swing.JButton finalizeTestReal;
    private javax.swing.JButton finishTestEdit;
    private javax.swing.JFrame freeResp;
    private java.awt.Button freeSubmit;
    private java.awt.TextArea freeText;
    private javax.swing.JTextField googleAuth;
    private java.awt.Button googleAuthSubmit;
    private javax.swing.JLabel googleLink;
    private static javax.swing.JList headList;
    private javax.swing.JButton headerEdit;
    private javax.swing.JLabel img;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton jump;
    private javax.swing.JDialog jumpHelpD;
    private javax.swing.JTextField jumpText;
    private javax.swing.JMenuItem jumpTo;
    private javax.swing.JButton jumpWhat;
    private javax.swing.JList listUnanswered;
    private javax.swing.JButton loadCTMT;
    private javax.swing.JButton loadResults;
    private javax.swing.JFrame missingAnswers;
    private javax.swing.JButton newQ;
    private javax.swing.JButton nextQuestion;
    private javax.swing.JButton okAddAnswer;
    private javax.swing.JFileChooser openATest;
    private javax.swing.JTextField periodField;
    private javax.swing.JButton previousQuestion;
    private javax.swing.JTextField qImgEdit;
    private javax.swing.JDialog qJump;
    private static javax.swing.JList qList;
    private javax.swing.JTextField qMaxAnswersEdit;
    private javax.swing.JTextField qTagEdit;
    private javax.swing.JTextField qTextEdit;
    private javax.swing.JComboBox qTypeBox;
    private javax.swing.JDialog questionEdit;
    private javax.swing.JLabel questionNum;
    private javax.swing.JLabel questionText;
    private static javax.swing.JComboBox random;
    private javax.swing.JDialog reallyClear;
    private javax.swing.JRadioButton relative;
    private java.awt.Button reviewQuestions;
    private java.awt.Button saveAnswers;
    private javax.swing.JFileChooser saveCTMA;
    private javax.swing.JButton saveHead;
    private javax.swing.JFileChooser saveTestFC;
    private javax.swing.JMenuItem skipQuestion;
    private javax.swing.JRadioButton strict;
    private javax.swing.JButton subResponse;
    private javax.swing.JButton takeATest;
    private javax.swing.JFrame testEdit;
    private javax.swing.JButton testEditHelp;
    private static javax.swing.JTextField testName;
    private javax.swing.JFrame testWindow;
    private javax.swing.JButton up;
    private java.awt.Button uploadAnswers;
    private javax.swing.JMenuItem uploadFile;
    private javax.swing.JTextField userNameField;
    private static javax.swing.JComboBox userNames;
    private static javax.swing.JTextField wordBank;
    // End of variables declaration//GEN-END:variables
}
